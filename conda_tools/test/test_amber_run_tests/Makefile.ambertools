######    Top-level targets, for general use:    ############################
-include ../../config.h
export AMBERHOME=$(AMBER_PREFIX)

fast: fast.serial

test::
	./test_at_serial.sh

test.parallel::
	./test_at_parallel.sh

test.openmp::
	./test_at_openmp.sh

######    Intermediate-level targets:    ############################

fast.serial: clean is_amberhome_defined \
	fast.nab fast.cpptraj fast.pytraj fast.antechamber fast.mdgx \
	fast.leap fast.unitcell fast.resp fast.reduce fast.pbsa fast.gbnsr6 \
	fast.parmed fast.elsize fast.sqm fast.rism1d \
	fast.rism3d.periodic fast.pdb4amber fast.paramfit \
	fast.cphstats fast.charmmlipid2amber fast.cpinutil fast.pymsmt

fast.amberlite:  # tested via fast.pdb4amber
fast.antechamber:
	cd antechamber && $(MAKE) -k fast
fast.charmmlipid2amber:
fast.cphstats:
fast.cpinutil:
fast.cpptraj:
fast.elsize:
fast.FEW:  # no fast testing
fast.gbnsr6:
fast.leap:
	cd leap && $(MAKE) -k fast
fast.mdgx:
fast.mm_pbsa:  # no fast testing
fast.mmpbsa:  # no fast testing
fast.nab:
fast.paramfit:
fast.parmed:
	cd parmed/normal_prmtop && ./Run.parmed # keep syntax consistent? (make fast); still 8 (s).
fast.pbsa:
fast.pymsmt:
fast.pytraj:
	cd pytraj && $(MAKE) -k fast
fast.pdb4amber:
	cd pdb4amber && $(MAKE) -k fast
fast.reduce:
fast.resp:
fast.rism1d:
fast.rism3d.periodic:
fast.sqm:
fast.unitcell:

test.serial: clean is_amberhome_defined \
	test.nab test.cpptraj test.pytraj test.antechamber test.mdgx \
	test.leap test.unitcell test.resp test.reduce test.pbsa test.gbnsr6 \
	test.mmpbsa test.parmed test.elsize test.sqm test.rism1d \
	test.rism3d.periodic test.amberlite test.paramfit test.mm_pbsa \
	test.FEW test.cphstats test.charmmlipid2amber test.cpinutil test.pymsmt

test.openmp2: clean is_amberhome_defined
	cd nab && $(MAKE) -k test
	cd $(AMBER_SOURCE)/AmberTools/src/cpptraj/test && $(MAKE) -k test

test.parallel2: clean is_amberhome_defined \
        test.nab test.cpptraj test.mmpbsa test.rism3d.periodic

test.cuda: clean is_amberhome_defined
	cd pbsa_cuda && ./test.sh

test.ambermini: test.leap test.sqm test.antechamber test.reduce test.paramfit

test.nab:
	cd nab && $(MAKE) -k test $(TESTRISMSFF)

test.ptraj:
	-cd ptraj_rmsa && ./Run.rms
	-cd ptraj_rms && ./Run.rms
#	-cd ptraj_les && ./Run.les
	-cd ptraj_matrix && ./Run.matrix
	-cd ptraj_order && ./Run.order
	-cd ptraj_trajectory && ./Run.ptraj
	-cd ptraj_remd_netcdf && ./Run.ptraj $(NETCDF)
	-cd ptraj_comprehensive && ./Run.comprehensive $(NETCDF)

test.antechamber:
	cd antechamber && $(MAKE) -k test

test.leap:
	cd leap && $(MAKE) -k test

test.unitcell:
	cd xtalutil/UnitCell && $(MAKE)

test.cpptraj:
	cd $(AMBER_SOURCE)/AmberTools/src/cpptraj/test && $(MAKE) -k test

test.pytraj:
	cd pytraj && $(MAKE)

test.pymsmt:
	# TODO: not work with --prefix yet since
	# pymsmt uses lib in its source folder (AmberTools/src/pymsmt/lib)
	cd pymsmt/mcpb/g03 && ./Run.pymsmt
	cd pymsmt/mcpb/g09 && ./Run.pymsmt
	cd pymsmt/mcpb/gms && ./Run.pymsmt
	cd pymsmt/pdbsearcher && ./Run.pymsmt

test.paramfit:
	cd paramfit && $(MAKE) -k test

test.resp:
	cd resp && ./Run.ade

test.reduce:
	cd reduce && ./Run.reduce

test.mdgx:
	-cd mdgx/1p7e && ./Test.1p7e
	-cd mdgx/NVTwat && ./Test.nvtwat
	-cd mdgx/MLE && ./Test.mle
	-cd mdgx/Settle && ./Test.settle
	-cd mdgx/MCBarostat && ./Test.mcb
	-cd mdgx/TIP4P && ./Test.tip4p
	-cd mdgx/ForceCalc && ./Test.frcc
	-cd mdgx/AddEP && ./Test.addep
	-cd mdgx/QFit && ./Test.qfit
	-cd mdgx/Triclinic && ./Test.triclinic
	-cd mdgx/Torsion && ./Test.torsion
	-cd mdgx/ConfSamp && ./Test.cs

test.quick:
	-cd quick/BenzeneHF && ./TestHF.sh
	-cd quick/MethaneOptHF && ./TestOptHF.sh

test.mtkpp:
	cd mtkpp && ./Run

test.pbsa:
	-cd pbsa_dmp && ./test
	-cd pbsa_np3m && ./Run.ion.min
	-cd pbsa_crgview && ./Run.ion.min
	-cd pbsa_bcopt && ./Run.dmp.min
	-cd pbsa_saopt && ./Run.dmp.min
	-cd pbsa_tri && ./Run.dmp.min
	-cd pbsa_rot && ./Run.charge.min
	-cd pbsa_lpb && ./Run.lsolver.min
	-cd pbsa_tsr && ./Run.tsrb.min
	-cd pbsa_radi && ./Run.ion.min
	-cd pbsa_npb && ./test
	-cd pbsa_frc && ./test
	-cd pbsa_ipb2 && ./Run.110D.min
	-cd pbsa_delphi && ./test
	-cd pbsa_IIM && ./Run.IIM.min
	-cd pbsa_ligand && ./Run.t4bnz.min
	-cd pbsa_aug_c2 && ./Run.ion.min
	-cd pbsa_memb_test && ./Run.memb.test
	-cd pbsa_phiout && ./Run.dmp.min

test.gbnsr6:
	-cd gbnsr6 && ./Run.gbnsr6.min

test.ambpdb:
	-cd ambpdb && ./Run.ambpdb
	-cd ambpdb_first_protein && ./Run.ambpdb
	-cd ambpdb_first_rna && ./Run.ambpdb

test.elsize:
	cd elsize && ./Run.elsize

test.chamber:
	-cd ./chamber/trans-but-2-ene && ./Run
	-cd ./chamber/ala_ala_ala && ./Run
	-cd ./chamber/ala_ala_ala && ./Runx
	-cd ./chamber/poly_pro_gas && ./Run.poly_pro_gas_chamber
	-cd ./chamber/glucose && ./Run
	-cd ./chamber/dhfr_gas && ./Run.dhfr_gas_chamber
	-cd ./chamber/dhfr_cmap_pbc && ./Run.dhfr_cmap_pbc_chamber
	-cd ./chamber/2b1q-trlose-wat-c36 && ./Run
	-cd ./chamber/test-c27-vmd-psf && ./Run

test.cphstats:
	-cd cphstats && ./Run.cphstats

test.sqm:
	-cd ./sqm/c2h2 && ./Run
	-cd ./sqm/ch3f && ./Run
	-cd ./sqm/nma && ./Run
	-cd ./sqm/znh+ && ./Run
	-cd ./sqm/h2s && ./Run
	-cd ./sqm/dhplus && ./Run
	-cd ./sqm/fecp2 && ./Run
	-cd ./sqm/external_charges && ./Run
	-cd ./sqm/dftb3 && ./Run

test.rism1d:
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/spc-kh && ./Run.spc; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/spc-psen && ./Run.spc-nacl-3; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/spc-hnc && ./Run.spc-lj; fi
	-if [ -n "$(TESTRISM)" ]; then cd ./rism1d/spc-polyt && ./Run.spc; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/spc-mv0 && ./Run.spc; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/lj-py && ./Run.lj; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/tip3p-kh && ./Run.tip3p; fi

test.rism1d.dev: test.rism1d
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/spc-kh && ./Run.spc-nacl; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/spc-kh && ./Run.spc-lj; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/spc-psen && ./Run.spc-1; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/spc-psen && ./Run.spc-3; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/spc-psen && ./Run.spc-nacl-1; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/spc-psen && ./Run.spc-nacl-2; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/spc-hnc && ./Run.spc; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/tip3p-kh && ./Run.tip3p-nacl; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/tip3p-kk-2008 && ./Run.tip3p-nacl-1; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/tip3p-kk-2008 && ./Run.tip3p-nacl-2; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/tip3p-kk-2008 && ./Run.tip3p-nacl-3; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/tip3p-kk-2008 && ./Run.tip3p-nacl-4; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/dt && ./Run.all; fi
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism1d/dev/ && $(MAKE); fi

test.rism3d.thermo:
	-if [ -n "$(TESTRISMSFF)" ]; then cd ./rism3d.thermo/ala && ./Run.thermoala; fi

test.rism3d.periodic:
	-cd rism3d.periodic/PH4+ && ./Run.PH4+.kh.pme
	-cd rism3d.periodic/imidazoleH+ && ./Run.imidazoleH+.kh.pme
	-cd rism3d.periodic/PH4+_triclinic && ./Run.PH4+_triclinic.kh.pme
	-cd rism3d.periodic/4lzta && ./Run.4lzta_5.kh.pme
	-cd rism3d.periodic/2igd && ./Run.2igd.kh.pme
	-cd rism3d.periodic/1d23 && ./Run.1d23.kh.pme
#	-cd rism3d.periodic/1ahoa && ./Run.1ahoa.kh.pme   <-- rather long test

test.saxs:
	- cd saxs && ./Run.saxs

test.mmpbsa:
	cd mmpbsa_py && $(MAKE) test

test.mm_pbsa:
	cd ../src/mm_pbsa/Examples && AMBER_SOURCE=$(AMBER_SOURCE) ./Run.mmpbsa.test

test.FEW:
	cd ../src/FEW/examples/test && AMBER_SOURCE=$(AMBER_SOURCE) ./Run.few.test

test.parmed:
	cd parmed/normal_prmtop && ./Run.parmed
	cd parmed/chamber_prmtop && ./Run.parmed
	cd parmed/solvated_prmtop && ./Run.parmed
	cd parmed/change_parms && ./Run.parmed
	cd parmed/multifiles && ./Run.parmed
	cd parmed/add12_6_4 && ./Run.parmed
	cd parmed/ti_merge && ./Run.parmed
	cd parmed/chamber && ./Run.parmed

test.cpinutil:
	cd cpinutil && ./Run.cpin

test.charmmlipid2amber:
	cd charmmlipid2amber && ./Run.charmmlipid2amber

test.pdb4amber: test.amberlite

test.amberlite:
	cd $(AMBER_SOURCE)/AmberTools/src/pdb4amber/tests/files/amberlite && ./Run.pdb4amber

test.pysander:
	cd ../../test/sanderapi && make Python

test.python: test.pysander test.parmed test.pdb4amber test.pytraj test.pymsmt \
	         test.cpinutil
	         # test.mmpbsa_py

finished:
	@echo ""
	@echo "Finished test suite for AmberTools at `date`."
	@echo ""

is_amberhome_defined:
	@(if [ -z "$(AMBERHOME)" ] ; then \
	    echo "Error: AMBERHOME should be defined or else some tests will fail !" ;\
	    exit 2 ;\
	fi ;\
	)

clean:
	-./test_at_clean.sh
	-cd antechamber && $(MAKE) -k clean
	-cd mmpbsa_py && $(MAKE) -k clean
	-cd $(AMBER_SOURCE)/AmberTools/src/mm_pbsa/Examples && ./Run.mmpbsa.clean
	-cd $(AMBER_SOURCE)/AmberTools/src/FEW/examples/test && ./Run.few.clean
	-cd $(AMBER_SOURCE)/AmberTools/src/cpptraj/test && $(MAKE) -k clean
	-cd leap && $(MAKE) -k clean
	-cd leap/glycam/06j && ./Run.glycam clean
	-cd leap/glycam/06EPb && ./Run.glycam clean
	-cd leap/glycam/06j_10 && ./Run.glycam clean
	-cd leap/glycam/06j_12SB && ./Run.glycam clean

check:
	(find . -name "*.dif" ! -size 0c -print | \
	while read dif ;\
	do \
	    echo $$dif ;\
	    cat $$dif ;\
	    echo ;\
	done ;\
	)

